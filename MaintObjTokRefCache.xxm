[[@txDefs,txSession,SQLiteData,Variants,]][[!var
qr:TSQLiteStatement;
id,x:integer;
function LogPr:string;
begin
  Result:='['+FormatDateTime('yyyy-mm-dd hh:nn:ss.zzz',Now)+']';
end;

]][[
//assert Use_ObjTokRefCache
Context.ContentType:='text/plain';
Context.BufferSize:=0;
CheckMaintProtect(Context);

if Context['redo'].AsInteger=1 then
 begin
  Context.SendHTML(LogPr+'Redo all...'#13#10);
  Session.DbCon.Execute('BEGIN TRANSACTION');
  try
	Session.DbCon.Execute('DELETE FROM ObjTokRefCache');//'TRUNCATE TABLE ObjTokRefCache'
    Session.DbCon.Execute('COMMIT TRANSACTION');
  except
    Session.DbCon.Execute('ROLLBACK TRANSACTION');
    raise;
  end;
  Context.SendHTML([LogPr,'Items cleared'#13#10]);
 end;

Context.SendHTML(LogPr+'Items without tokens/references...'#13#10);
Session.DbCon.Execute('BEGIN TRANSACTION');
try
	Session.DbCon.Execute(
	  'INSERT INTO ObjTokRefCache ([id],tokHTML,refHTML) SELECT [id],'''','''' FROM Obj'+
	  ' WHERE NOT EXISTS (SELECT [id] FROM ObjTokRefCache WHERE ObjTokRefCache.[id]=Obj.[id])'+
	  ' AND NOT EXISTS (SELECT [id] FROM Tok WHERE Tok.[obj_id]=Obj.[id])'+
	  ' AND NOT EXISTS (SELECT [id] FROM Ref WHERE Ref.[obj1_id]=Obj.[id])');
    Session.DbCon.Execute('COMMIT TRANSACTION');
except
    Session.DbCon.Execute('ROLLBACK TRANSACTION');
    raise;
end;
Context.SendHTML([LogPr,'Items added'#13#10#13#10]);

Session.DbCon.Execute('BEGIN TRANSACTION');
try
	if DBSingleValue('SELECT COUNT(*) FROM ObjTokRefCache',[],Session.RealmNew)=0 then
	  qr:=TSQLiteStatement.Create(Session.DbCon,'SELECT [id] FROM Obj ORDER BY [id]')
	else
	  qr:=TSQLiteStatement.Create(Session.DbCon,'SELECT [id] FROM Obj WHERE NOT EXISTS (SELECT [id] FROM ObjTokRefCache WHERE ObjTokRefCache.[id]=Obj.[id]) ORDER BY [id]'); //TODO: skip deleted realm?
	try
	  x:=0;
	  Context.SendHTML(LogPr);
	  while qr.Read do //and Context.Connected do
	   begin
		id:=qr.GetInt('id');
		Context.SendHTML(id);
		Context.Include('aObjTokRefCache.xxmi',[id]);

		inc(x);
		if x=20 then
		 begin
		  x:=0;
		  Context.SendHTML(#13#10+LogPr);
		 end
		else
		  Context.SendHTML(' ');
	   end;
	finally
	  qr.Free;
	end;

	Session.DbCon.Execute('COMMIT TRANSACTION');
except
    Session.DbCon.Execute('ROLLBACK TRANSACTION');
    raise;
end;


Context.SendHTML('---'#13#10);
