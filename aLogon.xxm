[[@txDefs,DataLank,txSession,xxmString,]][[!var
id,uid,pid,newObjTypeID,RlmID,newWeight:integer;
url,login,name,desc,salt,pwd,email:string;
qr:TQueryResult;
sc:TStringContext;
const
dflag:array[boolean] of string=('','-');
]][[
CheckFormProtect(Context);
qr:=TQueryResult.Create(Session.DbCon,'SELECT Obj.id, Obj.rlm_id, ObjType.dft FROM Obj INNER JOIN ObjType ON ObjType.id=Obj.objtype_id WHERE ObjType.system=? ORDER BY Obj.id LIMIT 1',['usergroup']);
try
  pid:=qr.GetInt('id');
  newObjTypeID:=qr.GetInt('dft');
  RlmID:=qr.GetInt('rlm_id');
finally
  qr.Free;
end;
if pid=0 then raise Exception.Create('Registration unavailable. Destination user group not found.');
if newObjTypeID=0 then newObjTypeID:=1;//? get ObjType.system='user'?
login:=Context['login'].Value;
name:=Context['name'].Value;
desc:=Context['desc'].Value;
pwd:=Context['pwd1'].Value;
email:=Context['email'].Value;
if pwd<>Context['pwd2'].Value then raise Exception.Create('Passwords mismatch');
//TODO: check/enforce pwd quality
if email<>Context['email2'].Value then raise Exception.Create('E-mail address mismatch');
if Length(login)<3 then raise Exception.Create('Invalid login');

Session.LogonAttemptCheck;
Session.DbCon.Execute('BEGIN TRANSACTION');
try
  newWeight:=0;//DBSingleValue('SELECT weight FROM ObjType WHERE id=?',[newObjTypeID],0);
  Session.DbCon.Execute('INSERT INTO Obj (pid,objtype_id,name,[desc],url,weight,rlm_id,c_ts,c_uid,m_ts,m_uid) VALUES (?,?,?,?,?,?,?,?,?,?,?)',
    [pid,newObjTypeID,name,desc,Context['url'].Value,newWeight,RlmID,VNow,Session.UserID,VNow,Session.UserID],uid);
  salt:=NewPasswordSalt;
  Session.DbCon.Execute('INSERT INTO Usr (uid,login,email,auth,salt,pwd,c_ts,c_uid,m_ts,m_uid) VALUES (?,?,?,?,?,?,?,?,?,?)',[
    uid,login,email,'',salt,dflag[Use_NewUserEmailActivation]+PasswordToken(salt,pwd),VNow,Session.UserID,VNow,Session.UserID],id);//pwd?
  TermStore.StoreTerms(itObj,uid,pid,name+#13#10+desc);
  if Use_ObjHist then
    Session.DbCon.Execute('INSERT INTO ObjHist (obj_id,rlm_id,ts,uid,name,[desc],weight) VALUES (?,?,?,?,?,?,?)',
      [uid,RlmID,VNow,Session.UserID,name,desc,newWeight],pid);
  Session.DbCon.Execute('COMMIT TRANSACTION');
except
  Session.DbCon.Execute('ROLLBACK TRANSACTION');
  raise;
end;

if Use_NewUserEmailActivation then
 begin
  sc:=TStringContext.Create(Context,Self);
  try
    sc.AutoEncoding:=aeIso8859;
    sc.Include('LogonMail_New.xxmi',[id,login,name,email],[]);
    sc.SaveToFile('C:\InetPub\mailroot\PickUp\txLogon_'+FormatDateTime('yyyymmddhhnnss',Now)+'.eml');
  finally
    sc.Free;
  end;
  url:='fLogon.xxm?mailsent=1';
 end
else
 begin
  qr:=TQueryResult.Create(Session.DbCon,'SELECT uid, email, 0 as isanon FROM Usr WHERE id=?',[id]);
  try
    Session.LoadUser(qr);
  finally
    qr.Free;
  end;
  url:='Item.xxm?x=i'+IntToStr(uid);
 end;

Context.Redirect(url,true);
<<a href="[[=url]]">>=url<</a>
