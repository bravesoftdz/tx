[[@txDefs,DataLank,txSession,]][[!var
id,pid,i,j,l,x,oldObjTypeID,newObjTypeID,newWeight,RlmID,addOther:integer;
s,url:string;
name,desc:WideString;
tokens:array of record
  id,weight:integer;
end;
references:array of record
  reftype,obj2,weight:integer;
end;
namechanged:boolean;
par:IXxmParameter;
]][[

id:=Context['id'].AsInteger;
pid:=Context['pid'].AsInteger;
newObjTypeID:=Context['objtype'].AsInteger;
newWeight:=Context['weight'].AsInteger;
CheckFormProtect(Context);

//check realm
if id=0 then x:=pid else x:=id;
RlmID:=DBSingleValue('SELECT rlm_id FROM Obj WHERE id=?',[x],DefaultRlmID);
Session.HasRealmPermission(x,RlmID,rpEdit);

name:=Context['name'].Value;
desc:=Context['desc'].Value;
addOther:=0;

if id<>0 then Session.UpdateID:=id;

//quick add tokref, list first, get weight-delta from types
if id=0 then
 begin
  SetLength(tokens,FilterRecentCount);
  par:=Context['addtok'];
  i:=0;
  while par<>nil do //and (i<FilterRecentCount)?
   begin
    s:=par.Value;
    if s='new' then addOther:=1 else
    if s<>'' then
     begin
      tokens[i].id:=StrToInt(s);
      tokens[i].weight:=DBSingleValue('SELECT weight FROM TokType WHERE id=?',[tokens[i].id],0);
  	  inc(newWeight,tokens[i].weight);
      inc(i);
     end;
    par:=par.NextBySameName;
   end;
  par:=Context['addref'];
  SetLength(tokens,i);
  SetLength(references,FilterRecentCount);
  i:=0;
  while par<>nil do
   begin
    s:=par.Value;
    if s='new' then addOther:=2 else
    if s<>'' then
     begin
      l:=Length(s);
      j:=1;
      while (j<=l) and (s[j]<>';') do inc(j);
      references[i].reftype:=StrToInt(Copy(s,1,j-1));
      references[i].obj2:=StrToInt(Copy(s,j+1,l-j));
      references[i].weight:=DBSingleValue('SELECT weight FROM RefType WHERE id=?',[references[i].reftype],0);
      inc(newWeight,references[i].weight);
      inc(i);
     end;
    par:=par.NextBySameName;
   end;
  SetLength(references,i);
 end
else
 begin
  SetLength(tokens,0);
  SetLength(references,0);
 end;

Session.DbCon.Execute('BEGIN TRANSACTION');
try

	//insert/update object
	if id=0 then
	 begin
	  namechanged:=false;
	  newWeight:=newWeight+DBSingleValue('SELECT weight FROM ObjType WHERE id=?',[newObjTypeID],0);
	  Session.DbCon.Execute('INSERT INTO Obj (pid,objtype_id,name,[desc],url,weight,rlm_id,c_ts,c_uid,m_ts,m_uid) VALUES (?,?,?,?,?,?,?,?,?,?,?)',
		[pid,newObjTypeID,name,desc,Context['url'].Value,newWeight,RlmID,VNow,Session.UserID,VNow,Session.UserID],id);

	  //path (only on new object)
	  if Use_ObjPath then
	   begin
	    i:=0;
		Session.DbCon.Execute('INSERT INTO ObjPath (pid,oid,lvl) VALUES (?,?,?)',[id,id,i]);
	    while pid<>0 do
	     begin
	      inc(i);
	      Session.DbCon.Execute('INSERT INTO ObjPath (pid,oid,lvl) VALUES (?,?,?)',[pid,id,i]);
		  pid:=DBSingleValue('SELECT pid FROM Obj WHERE id=?',[pid],0);
	     end;
	   end;

	 end
	else
	 begin
	  oldObjTypeID:=DBSingleValue('SELECT objtype_id FROM Obj WHERE id=?',[id],0);
	  namechanged:=(oldObjTypeID<>newObjTypeID) or (name<>DBSingleValue('SELECT name FROM Obj WHERE id=?',[id],''));
	  if newObjTypeID<>oldObjTypeID then
		newWeight:=newWeight
          -DBSingleValue('SELECT weight FROM ObjType WHERE id=?',[oldObjTypeID],0)
          +DBSingleValue('SELECT weight FROM ObjType WHERE id=?',[newObjTypeID],0);
	  //pid: use move to move existing items
	  Session.DbCon.Execute('UPDATE Obj SET objtype_id=?, name=?, [desc]=?, url=?, weight=?, m_ts=?, m_uid=? WHERE id=?',
		[newObjTypeID,name,desc,Context['url'].Value,newWeight,VNow,Session.UserID,id]);
	 end;

	//if newWeight<>oldWeight then ...

	TermStore.StoreTerms(itObj,id,id,name+#13#10+desc);
	Session.AddFilterRecent(itObjType,newObjTypeID);

	//history
	if Use_ObjHist then
	  Session.DbCon.Execute('INSERT INTO ObjHist (obj_id,rlm_id,ts,uid,name,[desc],weight) VALUES (?,?,?,?,?,?,?)',
		[id,RlmID,VNow,Session.UserID,name,desc,newWeight],i);

	//quick add tokens, references
	for i:=0 to Length(tokens)-1 do
	  if tokens[i].id<>0 then
	   begin
		Session.DbCon.Execute('INSERT INTO Tok (obj_id,toktype_id,[desc],weight,c_ts,c_uid,m_ts,m_uid) VALUES (?,?,?,?,?,?,?,?)',
		  [id,tokens[i].id,'',tokens[i].weight,VNow,Session.UserID,VNow,Session.UserID]);
		Session.DbCon.Execute('INSERT INTO Rpt (obj_id,ts,uid,desc,weight,toktype_id) VALUES (?,?,?,?,?,?)',
		  [id,VNow,Session.UserID,'',tokens[i].weight,tokens[i].id]);
	   end;
    for i:=0 to Length(references)-1 do
      if references[i].reftype<>0 then
       begin
        Session.DbCon.Execute('INSERT INTO Ref (obj1_id,reftype_id,obj2_id,[desc],weight,c_ts,c_uid,m_ts,m_uid) VALUES (?,?,?,?,?,?,?,?,?)',
          [id,references[i].reftype,references[i].obj2,'',references[i].weight,VNow,Session.UserID,VNow,Session.UserID]);
        Session.DbCon.Execute('INSERT INTO Rpt (obj_id,ts,uid,desc,weight,reftype_id,obj2_id) VALUES (?,?,?,?,?,?,?)',
          [id,VNow,Session.UserID,'',references[i].weight,references[i].reftype,references[i].obj2]);
       end;

	if Use_ObjTokRefCache then
	 begin
	  Context.Include('aObjTokRefCache.xxmi',[id]);
	  if namechanged then //TODO: re-create entries? see MaintObjTokRefCache.xxm
		Session.DbCon.Execute('DELETE FROM ObjTokRefCache WHERE [id] IN (SELECT [obj1_id] FROM Ref WHERE obj2_id=?)',[id]);
	 end;

    if Use_Unread and not Session.Stealth then
      Session.DbCon.Execute('INSERT INTO Obx (obj_id) VALUES (?)',[id]);

    Session.DbCon.Execute('COMMIT TRANSACTION');
except
    Session.DbCon.Execute('ROLLBACK TRANSACTION');
    raise;
end;

case addOther of
  0:url:='Item.xxm?x=i'+IntToStr(id);
  1:url:='fTok.xxm?id='+IntToStr(id);
  2:url:='fRef.xxm?id='+IntToStr(id);
end;

Context.Redirect(url,true);
<<a href="[[=url]]">>=url<</a>
