[[@txDefs,DataLank,txSession,]][[!var
IsAdmin:boolean;
uid,id:integer;
url:string;
]][[

CheckFormProtect(Context);

IsAdmin:=(Session.UserID=0) or Session.IsAdmin('logins');
id:=Context['id'].AsInteger;
uid:=Context['obj'].AsInteger;

if not(IsAdmin) and (uid<>Session.UserID) then
  raise Exception.Create('Updating accounts other than own is only allowed by login-admininistrator.');
//TODO: refresh session when uid changes?
//TODO: if IsAdmin=nil then refuse change uid?

Session.LogonAttemptCheck;
Session.DbCon.BeginTrans;
try
    if id=0 then
      DBSingleValue('INSERT INTO Usr (uid,login,email,auth,salt,pwd,c_ts,c_uid,m_ts,m_uid) VALUES (?,?,?,?,?,?,?,?,?,?)',[
        uid,Context['login'].Value,Context['email'].Value,Context['auth'].Value,'','',VNow,Session.UserID,VNow,Session.UserID],0)//pwd?
    else
	 begin
      Session.DbCon.Execute('UPDATE Usr SET uid=?, login=?, email=?, m_ts=?, m_uid=? WHERE id=?',[
        uid,Context['login'].Value,Context['email'].Value,VNow,Session.UserID,id]);//pwd?
	  if IsAdmin then
	    Session.DbCon.Execute('UPDATE Usr SET auth=? WHERE id=?',[Context['auth'].Value,id]);
	 end;

    Session.DbCon.CommitTrans;
except
    Session.DbCon.RollbackTrans;
    raise;
end;

Session.AddFilterRecent(itObj,uid);

url:='Users.xxm';

Context.Redirect(url,true);
<<a href="[[=url]]">>=url<</a>
