[[@txDefs,SQLiteData,txSession]][[!var
qr:TSQLiteStatement;
i,uid,id,id2:integer;
b:boolean;
]][[

Context.ContentType:='text/plain';
Context.BufferSize:=0;
CheckMaintProtect(Context);

if not Use_Unread then raise Exception.Create('Use_Unread not enabled');

Session.DbCon.Execute('BEGIN TRANSACTION');
try
    uid:=0;
    id:=0;
    id2:=0;
	b:=false;
	qr:=TSQLiteStatement.Create(Session.DbCon,'SELECT * FROM Urx ORDER BY uid, id2, id1');
	try
	  while qr.Read do
	   begin
	    i:=qr.GetInt('uid');
	    if uid<>i then
	     begin
	      if b then Session.DbCon.Execute('UPDATE Urx SET id2=? WHERE id=?',[id2,id]);
	      uid:=i;
	      Context.SendHTML([uid,' ']);
	      id:=qr.GetInt('id');
	      //id1:=qr.GetInt('id1');
	      id2:=qr.GetInt('id2');
	      b:=false;
	     end
	    else
	     begin
	      i:=qr.GetInt('id1');
	      if i>id2+1 then
	       begin
	        if b then Session.DbCon.Execute('UPDATE Urx SET id2=? WHERE id=?',[id2,id]);
            id:=qr.GetInt('id');
	        //id1:=i;
	        id2:=qr.GetInt('id2');
			b:=false;
	       end
	      else
	       begin
	        i:=qr.GetInt('id2');
	        if i>id2 then
	         begin
	          id2:=i;
	          b:=true;
	         end;
	       end;
	     end;
	   end;
	finally
	  qr.Free;
	end;
	if b then Session.DbCon.Execute('UPDATE Urx SET id2=? WHERE id=?',[id2,id]);

	Context.SendHTML(#13#10#13#10'Clean-up...');

	Session.DbCon.Execute('DELETE FROM Urx WHERE id IN'+
      ' (SELECT A.id FROM Urx A INNER JOIN Urx B ON B.uid=A.uid'+
      ' AND A.id<>B.id AND B.id1<=A.id1 AND B.id2>=A.id2)',[]);

    Session.DbCon.Execute('COMMIT TRANSACTION');
except
    Session.DbCon.Execute('ROLLBACK TRANSACTION');
    raise;
end;

]]

-- done
