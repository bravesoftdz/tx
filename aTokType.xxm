[[@txDefs,DataLank,txSession,]][[!var
id,oldWeight,newWeight,defChild:integer;
url:string;
]][[

CheckFormProtect(Context);
newWeight:=Context['weight'].AsInteger;
//when new: default weight from parent?

//check edit permission in default realm
Session.HasRealmPermission(0,DefaultRlmID,rpEdit);

//TODO: transaction?
id:=Context['id'].AsInteger;
defChild:=Context['default'].AsInteger;
oldWeight:=DBSingleValue('SELECT weight FROM TokType WHERE id=?',[id],0);

Session.DbCon.BeginTrans;
try

  if id=0 then
    id:=Session.DbCon.Insert('TokType',
      ['pid',Context['pid'].AsInteger
      ,'icon',Context['icon'].AsInteger
      ,'name',Context['name'].Value
      ,'dft',defChild
      ,'weight',newWeight
      ,'c_ts',VNow
      ,'c_uid',Session.UserID
      ,'m_ts',VNow
      ,'m_uid',Session.UserID
      ],'id')
  else
   begin
    Session.UpdateID:=id;
    //use move to move existing items
    Session.DbCon.Update('TokType',
      ['id',id
      ,'icon',Context['icon'].AsInteger
      ,'name',Context['name'].Value
      ,'dft',defChild
      ,'weight',newWeight
      ,'m_ts',VNow
      ,'m_uid',Session.UserID
      ]);
   end;

  Session.AddFilterRecent(itTokType,defChild);

  if Session.IsAdmin('config') then
    Session.DbCon.Update('TokType',['id',id,'system',Context['system'].Value]);

  if not(newWeight=oldWeight) then
   begin
    Session.DbCon.Execute('UPDATE Tok SET weight=weight+(?) WHERE toktype_id=?',[newWeight-oldWeight,id]);
    Session.DbCon.Execute('UPDATE Obj SET weight=weight+(?) WHERE id IN (SELECT obj_id FROM Tok WHERE toktype_id=?)',[newWeight-oldWeight,id]);
   end;
  if Use_ObjTokRefCache then //TODO: re-create entries? see MaintObjTokRefCache.xxm
    Session.DbCon.Execute('DELETE FROM ObjTokRefCache WHERE [id] IN (SELECT [obj_id] FROM Tok WHERE toktype_id=?)',[id]);

  Session.DbCon.CommitTrans;
except
  Session.DbCon.RollbackTrans;
  raise;
end;

url:='Item.xxm?x=tt'+IntToStr(id);
Context.Redirect(url,true);
<<a href="[[=url]]">>=url<</a>
